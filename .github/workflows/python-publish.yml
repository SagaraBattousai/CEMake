name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: windows-latest
    # strategy:
    #   matrix:
    #     python_version: [3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9]
    steps:  
    - name: Checkout Code   
      uses: actions/checkout@v2
    
    - name: Set up Python #${{ matrix.python_version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' #${{ matrix.python_version }}
    
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        # Make this better and not require requirements when you have time
        key: ${{ runner.os }}-pip-publish
        restore-keys: |
          ${{ runner.os }}-pip-publish
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        #pip install pylint coverage
        #if ( Test-Path -Path .\requirements.txt ) { pip install -r requirements.txt }

        #- name: Lint with pylint
        #run: pylint --rcfile=.pylintrc --exit-zero cemake

        #- name: Test with unittest
        #run: coverage run -m unittest

    - name: Build and Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine upload dist\*




